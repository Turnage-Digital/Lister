// <auto-generated />
using System;
using System.ComponentModel.DataAnnotations.Schema;
using Lister.Core.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lister.Core.Sql.Migrations.Lister
{
    [DbContext(typeof(ListerDbContext))]
    partial class ListerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Lister.Core.Sql.Entities.ItemDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Bag")
                        .IsRequired()
                        .HasColumnType("JSON")
                        .HasAnnotation("Relational:JsonPropertyName", "bag");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "createdBy");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasAnnotation("Relational:JsonPropertyName", "createdOn");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ListId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ListId");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.HasIndex("ListId");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("Lister.Core.Sql.ListDb", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.ToTable("Lists", (string)null);
                });

            modelBuilder.Entity("Lister.Core.Sql.ValueObjects.ColumnDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<Guid?>("ListId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ListId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.HasIndex("ListId");

                    b.ToTable("Columns", (string)null);
                });

            modelBuilder.Entity("Lister.Core.Sql.ValueObjects.StatusDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "color");

                    b.Property<Guid?>("ListId")
                        .HasColumnType("char(36)")
                        .HasColumnName("ListId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.HasIndex("ListId");

                    b.ToTable("Statuses", (string)null);
                });

            modelBuilder.Entity("Lister.Core.Sql.Entities.ItemDb", b =>
                {
                    b.HasOne("Lister.Core.Sql.ListDb", "ListDb")
                        .WithMany("Items")
                        .HasForeignKey("ListId");

                    b.Navigation("ListDb");
                });

            modelBuilder.Entity("Lister.Core.Sql.ValueObjects.ColumnDb", b =>
                {
                    b.HasOne("Lister.Core.Sql.ListDb", "ListDb")
                        .WithMany("Columns")
                        .HasForeignKey("ListId");

                    b.Navigation("ListDb");
                });

            modelBuilder.Entity("Lister.Core.Sql.ValueObjects.StatusDb", b =>
                {
                    b.HasOne("Lister.Core.Sql.ListDb", "ListDb")
                        .WithMany("Statuses")
                        .HasForeignKey("ListId");

                    b.Navigation("ListDb");
                });

            modelBuilder.Entity("Lister.Core.Sql.ListDb", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Items");

                    b.Navigation("Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
