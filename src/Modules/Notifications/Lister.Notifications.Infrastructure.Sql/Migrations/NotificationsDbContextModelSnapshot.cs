// <auto-generated />
using System;
using Lister.Notifications.Infrastructure.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lister.Notifications.Infrastructure.Sql.Migrations
{
    [DbContext(typeof(NotificationsDbContext))]
    partial class NotificationsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Lister.Notifications.Infrastructure.Sql.Entities.NotificationDb", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ContentJson")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeliveredOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<Guid>("ListId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("NotificationRuleId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProcessedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ReadOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedOn");

                    b.HasIndex("ListId");

                    b.HasIndex("NotificationRuleId");

                    b.HasIndex("UserId");

                    b.HasIndex("ProcessedOn", "DeliveredOn");

                    b.HasIndex("UserId", "ReadOn");

                    b.ToTable("Notifications", (string)null);
                });

            modelBuilder.Entity("Lister.Notifications.Infrastructure.Sql.Entities.NotificationRuleDb", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ChannelsJson")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ListId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ScheduleJson")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<string>("TemplateId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TriggerJson")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<int>("TriggerType")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.HasIndex("UserId");

                    b.HasIndex("ListId", "TriggerType");

                    b.HasIndex("ListId", "IsActive", "IsDeleted");

                    b.ToTable("NotificationRules", (string)null);
                });

            modelBuilder.Entity("Lister.Notifications.Infrastructure.Sql.ValueObjects.NotificationDeliveryAttemptDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("AttemptNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("AttemptedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ChannelJson")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<string>("FailureReason")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<TimeSpan?>("NextRetryAfter")
                        .HasColumnType("time(6)");

                    b.Property<Guid?>("NotificationId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttemptedOn");

                    b.HasIndex("NotificationId");

                    b.ToTable("NotificationDeliveryAttempts", (string)null);
                });

            modelBuilder.Entity("Lister.Notifications.Infrastructure.Sql.ValueObjects.NotificationHistoryEntryDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Bag")
                        .HasColumnType("JSON")
                        .HasAnnotation("Relational:JsonPropertyName", "bag");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "by");

                    b.Property<Guid?>("NotificationId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("On")
                        .HasColumnType("datetime(6)")
                        .HasAnnotation("Relational:JsonPropertyName", "on");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.ToTable("NotificationHistory", (string)null);
                });

            modelBuilder.Entity("Lister.Notifications.Infrastructure.Sql.ValueObjects.NotificationRuleHistoryEntryDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Bag")
                        .HasColumnType("JSON")
                        .HasAnnotation("Relational:JsonPropertyName", "bag");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "by");

                    b.Property<Guid?>("NotificationRuleId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("On")
                        .HasColumnType("datetime(6)")
                        .HasAnnotation("Relational:JsonPropertyName", "on");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.HasKey("Id");

                    b.HasIndex("NotificationRuleId");

                    b.ToTable("NotificationRuleHistory", (string)null);
                });

            modelBuilder.Entity("Lister.Notifications.Infrastructure.Sql.Entities.NotificationDb", b =>
                {
                    b.HasOne("Lister.Notifications.Infrastructure.Sql.Entities.NotificationRuleDb", "NotificationRule")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationRuleId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("NotificationRule");
                });

            modelBuilder.Entity("Lister.Notifications.Infrastructure.Sql.ValueObjects.NotificationDeliveryAttemptDb", b =>
                {
                    b.HasOne("Lister.Notifications.Infrastructure.Sql.Entities.NotificationDb", "Notification")
                        .WithMany("DeliveryAttempts")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("Lister.Notifications.Infrastructure.Sql.ValueObjects.NotificationHistoryEntryDb", b =>
                {
                    b.HasOne("Lister.Notifications.Infrastructure.Sql.Entities.NotificationDb", "Notification")
                        .WithMany("History")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("Lister.Notifications.Infrastructure.Sql.ValueObjects.NotificationRuleHistoryEntryDb", b =>
                {
                    b.HasOne("Lister.Notifications.Infrastructure.Sql.Entities.NotificationRuleDb", "NotificationRule")
                        .WithMany("History")
                        .HasForeignKey("NotificationRuleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("NotificationRule");
                });

            modelBuilder.Entity("Lister.Notifications.Infrastructure.Sql.Entities.NotificationDb", b =>
                {
                    b.Navigation("DeliveryAttempts");

                    b.Navigation("History");
                });

            modelBuilder.Entity("Lister.Notifications.Infrastructure.Sql.Entities.NotificationRuleDb", b =>
                {
                    b.Navigation("History");

                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
