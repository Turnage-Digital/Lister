// <auto-generated />
using System;
using System.ComponentModel.DataAnnotations.Schema;
using Lister.Lists.Infrastructure.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lister.Lists.Infrastructure.Sql.Migrations
{
    [DbContext(typeof(ListsDbContext))]
    partial class ListsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.Entities.ItemDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Bag")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("ListId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.HasIndex("ListId");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.Entities.ListDb", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.ToTable("Lists", (string)null);
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.Entities.ListMigrationJobDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Attempts")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AvailableAfter")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("BackupExpiresOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("BackupListId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("BackupRemovedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("CompletedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastError")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("NewListId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PlanJson")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RequestedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("SourceListId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Stage")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<DateTime?>("StartedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CorrelationId")
                        .IsUnique();

                    b.HasIndex("Stage", "AvailableAfter");

                    b.ToTable("ListMigrationJobs", (string)null);
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.ValueObjects.ColumnDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("AllowedValues")
                        .HasColumnType("JSON");

                    b.Property<Guid?>("ListId")
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("MaxNumber")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<decimal?>("MinNumber")
                        .HasColumnType("DECIMAL(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Regex")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Required")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.HasIndex("ListId");

                    b.ToTable("Columns", (string)null);
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.ValueObjects.ItemHistoryEntryDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Bag")
                        .HasColumnType("JSON")
                        .HasAnnotation("Relational:JsonPropertyName", "bag");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "by");

                    b.Property<int?>("ItemId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("On")
                        .HasColumnType("datetime(6)")
                        .HasAnnotation("Relational:JsonPropertyName", "on");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.HasIndex("ItemId");

                    b.ToTable("ItemHistory", (string)null);
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.ValueObjects.ListHistoryEntryDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Bag")
                        .HasColumnType("JSON")
                        .HasAnnotation("Relational:JsonPropertyName", "bag");

                    b.Property<string>("By")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "by");

                    b.Property<Guid?>("ListId")
                        .IsRequired()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("On")
                        .HasColumnType("datetime(6)")
                        .HasAnnotation("Relational:JsonPropertyName", "on");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.HasIndex("ListId");

                    b.ToTable("ListHistory", (string)null);
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.ValueObjects.StatusDb", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("ListId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.HasIndex("ListId");

                    b.ToTable("Statuses", (string)null);
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.ValueObjects.StatusTransitionDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AllowedNext")
                        .IsRequired()
                        .HasColumnType("json")
                        .HasColumnName("AllowedNext");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("ListDbId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ListId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.HasIndex("ListDbId");

                    b.HasIndex("ListId", "From")
                        .IsUnique();

                    b.ToTable("StatusTransitions", (string)null);
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.Entities.ItemDb", b =>
                {
                    b.HasOne("Lister.Lists.Infrastructure.Sql.Entities.ListDb", "List")
                        .WithMany("Items")
                        .HasForeignKey("ListId");

                    b.Navigation("List");
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.ValueObjects.ColumnDb", b =>
                {
                    b.HasOne("Lister.Lists.Infrastructure.Sql.Entities.ListDb", "ListDb")
                        .WithMany("Columns")
                        .HasForeignKey("ListId");

                    b.Navigation("ListDb");
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.ValueObjects.ItemHistoryEntryDb", b =>
                {
                    b.HasOne("Lister.Lists.Infrastructure.Sql.Entities.ItemDb", "Item")
                        .WithMany("History")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.ValueObjects.ListHistoryEntryDb", b =>
                {
                    b.HasOne("Lister.Lists.Infrastructure.Sql.Entities.ListDb", "List")
                        .WithMany("History")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("List");
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.ValueObjects.StatusDb", b =>
                {
                    b.HasOne("Lister.Lists.Infrastructure.Sql.Entities.ListDb", "ListDb")
                        .WithMany("Statuses")
                        .HasForeignKey("ListId");

                    b.Navigation("ListDb");
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.ValueObjects.StatusTransitionDb", b =>
                {
                    b.HasOne("Lister.Lists.Infrastructure.Sql.Entities.ListDb", null)
                        .WithMany("StatusTransitions")
                        .HasForeignKey("ListDbId");

                    b.HasOne("Lister.Lists.Infrastructure.Sql.Entities.ListDb", "ListDb")
                        .WithMany()
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListDb");
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.Entities.ItemDb", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("Lister.Lists.Infrastructure.Sql.Entities.ListDb", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("History");

                    b.Navigation("Items");

                    b.Navigation("StatusTransitions");

                    b.Navigation("Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
