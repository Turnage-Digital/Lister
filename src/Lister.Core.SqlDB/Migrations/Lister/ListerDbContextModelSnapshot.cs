// <auto-generated />
using System;
using System.ComponentModel.DataAnnotations.Schema;
using Lister.Core.SqlDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lister.Core.SqlDB.Migrations.Lister
{
    [DbContext(typeof(ListerDbContext))]
    partial class ListerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Lister.Core.SqlDB.Entities.ColumnEntity", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid?>("ListId")
                        .IsRequired()
                        .HasColumnType("char(36)")
                        .HasColumnName("ListId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.HasIndex("ListId");

                    b.ToTable("Columns", (string)null);
                });

            modelBuilder.Entity("Lister.Core.SqlDB.Entities.ItemEntity", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bag")
                        .IsRequired()
                        .HasColumnType("JSON");

                    b.Property<Guid?>("ListId")
                        .IsRequired()
                        .HasColumnType("char(36)")
                        .HasColumnName("ListId");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.HasIndex("ListId");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("Lister.Core.SqlDB.Entities.ListEntity", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.ToTable("Lists", (string)null);
                });

            modelBuilder.Entity("Lister.Core.SqlDB.Entities.StatusEntity", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("ListId")
                        .IsRequired()
                        .HasColumnType("char(36)")
                        .HasColumnName("ListId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasAnnotation("DatabaseGenerated", DatabaseGeneratedOption.Identity);

                    b.HasIndex("ListId");

                    b.ToTable("Statuses", (string)null);
                });

            modelBuilder.Entity("Lister.Core.SqlDB.Entities.ColumnEntity", b =>
                {
                    b.HasOne("Lister.Core.SqlDB.Entities.ListEntity", "List")
                        .WithMany("Columns")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("List");
                });

            modelBuilder.Entity("Lister.Core.SqlDB.Entities.ItemEntity", b =>
                {
                    b.HasOne("Lister.Core.SqlDB.Entities.ListEntity", "List")
                        .WithMany("Items")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("List");
                });

            modelBuilder.Entity("Lister.Core.SqlDB.Entities.StatusEntity", b =>
                {
                    b.HasOne("Lister.Core.SqlDB.Entities.ListEntity", "List")
                        .WithMany("Statuses")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("List");
                });

            modelBuilder.Entity("Lister.Core.SqlDB.Entities.ListEntity", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Items");

                    b.Navigation("Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
